{"version":3,"sources":["redux/commentReducer.js","component/modal.js","component/loader.js","redux/action.js","component/modalSelectTable.js","component/bordTable.js","component/reportExel.js","component/titleNavbar.js","component/comment.js","App.js","redux/rootReducer.js","saga/saga.js","index.js"],"names":["message","Modale","props","className","active","onClick","setActive","e","stopPropagation","FormControl","style","width","type","placeholder","onChange","setFilter","target","value","startFilter","size","apteka","map","item","isFilter","selectTargApteka","selectApteka","idApteka","Loader","SHOW_APTEKS","CLOSE_APTEKS","FETCH_APTEKS","APTEKS_RECEIVED","ENTER_APTEKA","ENTER_COMMENT","ENTER_TIME_ON","ENTER_TIME_OFF","ENTER_TARGET_APTEKA","SET_FILTER","RESET_FILTER","POST_COMMENT","POST_COMMENT_RECEIVED","LOG_IN_FAILED","SET_MODAL_MESSAGE","FETCH_REPORT","FETCH_REPORT_RECEIVED","REPORT_TIME_START","REPORT_TIME_END","WRITE_SELECT_TABLE_ROW","FETCH_CHANGE_REPORT","FETCH_CHANGE_REPORT_RECEIVED","LOCAL_UPDATE_STORE_ROW","WRITE_REPORT_FOR_EXEL","CLEAN_APTEKA","fetchApteks","fetchReport","setModalMessage","ModalSelectTable","useState","comment","setComment","dt_end","setDt_end","dt_begin","setDt_begin","useEffect","selectTableComment","console","log","clearInput","writeSelectTableRow","handlerInputComment","inputComment","current","inputTimeOn","inputTimeOff","useRef","onMouseDown","grafik","ref","as","rows","Button","variant","fetchPutReport","id","dt_date","date","mapDispatchToProps","BordTable","connect","state","tableReport","modalMessage","post","onDoubleClick","selectComment","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Excel","element","filename","data","name","label","enterTimeStart","enterWhatTimeEnd","writeReportForExel","TitleNavbar","reportTimeStart","reportTimeEnd","reportForExel","Navbar","bg","handlerTimeStart","handlerTimeEnd","dateStart","dateEnd","dataSet","CloseApteks","ShowApteks","enterApteks","enterTextComment","enterWhatTimeOn","enterWhatTimeOff","selectTarget","postComment","cleanApteka","Comment","aptekaFiltered","showApteka","textApteka","textComment","enterTimeOn","enterTimeOff","isLoader","error","postCommentDate","Modal","show","onHide","aria-labelledby","Body","days1","days2","length","whatApteka","timeOff","timeOn","whatComment","App","isAuth","setAuth","authCheck","a","userToken","localStorage","getItem","userID","replace","fetch","process","then","res","json","checkCredentials","checkRights","window","location","href","nowDate","Date","toISOString","substr","dispatch","useDispatch","initialState","getApteka","isChangeReport","rootReducer","combineReducers","action","isChange","newTableReport","row","Object","assign","stText","stOnline","slice","i","result","toLowerCase","includes","filtrlist","fetchApteksWatcher","postCommentWatcher","fetchReportWatcher","fetchPutReportWatcher","rootSaga","response","newList","parsed","ID_APTEKA","APTEKA","push","put","takeLatest","options","method","headers","body","JSON","stringify","newDate","toString","format","dateString","time","split","substring","arrDate","formatGrafik","day1","day2","all","sagaMiddleware","saga","store","createStore","compose","applyMiddleware","thunk","run","app","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f422eb6.chunk.js","sourcesContent":["import {\r\n    CLOSE_APTEKS,\r\n    SHOW_APTEKS,\r\n    FETCH_APTEKS,\r\n    APTEKS_RECEIVED,\r\n    ENTER_APTEKA,\r\n    ENTER_COMMENT,\r\n    ENTER_TIME_ON,\r\n    ENTER_TIME_OFF,\r\n    ENTER_TARGET_APTEKA,\r\n    SET_FILTER,\r\n    RESET_FILTER,\r\n    POST_COMMENT,\r\n    POST_COMMENT_RECEIVED,\r\n    LOG_IN_FAILED,\r\n    SET_MODAL_MESSAGE,\r\n    FETCH_REPORT,\r\n    FETCH_REPORT_RECEIVED,\r\n    REPORT_TIME_START,\r\n    REPORT_TIME_END,\r\n    WRITE_SELECT_TABLE_ROW,\r\n    FETCH_CHANGE_REPORT,\r\n    FETCH_CHANGE_REPORT_RECEIVED,\r\n    LOCAL_UPDATE_STORE_ROW,\r\n    WRITE_REPORT_FOR_EXEL,\r\n    CLEAN_APTEKA\r\n} from \"../redux/action\";\r\n\r\nlet nowDate = new Date().toISOString().substr(0, 10)\r\nlet message\r\nconst initialState = {\r\n    getApteka: null,\r\n    aptekaFiltered: null,\r\n    showApteka: false,\r\n    textApteka: '',\r\n    textComment: null,\r\n    enterTimeOn: null,\r\n    enterTimeOff: null,\r\n    postCommentDate: false,\r\n    isLoader: false,\r\n    modalMessage: '',\r\n    error: null,\r\n    tableReport: null,\r\n    reportTimeStart: nowDate,\r\n    reportTimeEnd: nowDate,\r\n    selectTableComment: null,\r\n    isChangeReport: null,\r\n    reportForExel: null\r\n}\r\n\r\nexport const commentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOCAL_UPDATE_STORE_ROW:\r\n            if (action.value.isChange) {\r\n                let newTableReport = state.tableReport.map(row => {\r\n                    if (row.id === action.value.id) {\r\n                        return Object.assign(row, action.value);\r\n                    }\r\n                    return row;\r\n                })\r\n                return {...state, tableReport: newTableReport}\r\n            }\r\n            return state\r\n        case REPORT_TIME_START:\r\n            return {...state, reportTimeStart: action.value}\r\n        case REPORT_TIME_END:\r\n            return {...state, reportTimeEnd: action.value}\r\n        case FETCH_APTEKS:\r\n            return state\r\n        case FETCH_REPORT:\r\n            return {...state, isLoader: true}\r\n        case FETCH_CHANGE_REPORT:\r\n            return {...state, isLoader: true}\r\n        case FETCH_CHANGE_REPORT_RECEIVED:\r\n            if (action.data) {\r\n                message = 'Изменения внесены'\r\n            } else {\r\n                message = 'Не удалось внести изменения'\r\n            }\r\n            return {...state, isChangeReport: action.data, modalMessage: message, isLoader: false}\r\n        case APTEKS_RECEIVED:\r\n            return {...state, getApteka: action.data, aptekaFiltered: action.data}\r\n        case FETCH_REPORT_RECEIVED:\r\n            if (action.data.length < 1) {\r\n                message = 'нет записей в талице'\r\n            } else {\r\n                message = ''\r\n            }\r\n            return {...state, tableReport: action.data, isLoader: false, modalMessage: message}\r\n        case LOG_IN_FAILED:\r\n            return {...state, error: action.data, modalMessage: 'Нет связи с сервером', isLoader: false}\r\n        case POST_COMMENT:\r\n            return {...state, isLoader: true}\r\n        case POST_COMMENT_RECEIVED:\r\n            if (action.data) {\r\n                message = 'Коментарий успешно записан'\r\n            } else {\r\n                message = 'Коментарий неудалось записать'\r\n            }\r\n            return {...state, postCommentDate: action.data, isLoader: false, modalMessage: message}\r\n        case CLOSE_APTEKS:\r\n            return {...state, showApteka: false}\r\n        case SHOW_APTEKS:\r\n            return {...state, showApteka: true}\r\n        case ENTER_APTEKA:\r\n            return {...state, showApteka: action.value}\r\n        case ENTER_COMMENT:\r\n            return {...state, textComment: action.value}\r\n        case ENTER_TIME_ON:\r\n            return {...state, enterTimeOn: action.value}\r\n        case ENTER_TIME_OFF:\r\n            return {...state, enterTimeOff: action.value}\r\n        case ENTER_TARGET_APTEKA:\r\n            return {...state, textApteka: action.value}\r\n        case SET_FILTER:\r\n            let stText = action.value\r\n            let stOnline = state.getApteka.slice()\r\n\r\n            for (let i = 0; i < stOnline.length; i++) {\r\n                let result = false\r\n                stOnline[i].isFilter = false\r\n                if (stOnline[i].apteka.toLowerCase().includes(stText.toLowerCase())) {\r\n                    result = true\r\n                }\r\n                if (result) {\r\n                    stOnline[i].isFilter = true\r\n                }\r\n            }\r\n            return {...state, aptekaFiltered: stOnline}\r\n        case RESET_FILTER:\r\n            let filtrlist = state.apteka.slice()\r\n            for (let i = 0; i < filtrlist.length; i++) {\r\n                filtrlist[i].isFilter = true\r\n            }\r\n            return {...state, aptekaFiltered: filtrlist}\r\n        case SET_MODAL_MESSAGE:\r\n            return {...state, modalMessage: action.message}\r\n        case WRITE_SELECT_TABLE_ROW:\r\n            return {...state, selectTableComment: action.value}\r\n        case WRITE_REPORT_FOR_EXEL:\r\n            return {...state, reportForExel: action.value}\r\n        case CLEAN_APTEKA:\r\n            return {...state, textApteka: ''}\r\n        default:\r\n            return state\r\n    }\r\n}","import React  from \"react\";\r\nimport '../style/modal.css'\r\nimport {FormControl} from \"react-bootstrap\";\r\n\r\nconst Modale = (props) =>{\r\n\r\n    const selectApteka = (item) => {\r\n        props.selectTargApteka(item)\r\n        props.setActive()\r\n    }\r\n    const startFilter = (e) => {\r\n        props.setFilter(e.target.value)\r\n    }\r\n\r\n  return(\r\n        <div className={props.active ? 'services active' : 'services'}\r\n             onClick={props.setActive}>\r\n            <div className={props.active ? 'services_content active' : 'services_content'}\r\n                 onClick={e => e.stopPropagation()}>\r\n                <div className='services_text'>\r\n                  <div className=\"d-flex flex-column align-items-center font-weight-bold\">\r\n                    <h3>Аптеки</h3>\r\n                   <div className=\"d-flex flex-row align-items-center\">\r\n                      <FormControl\r\n                         style={{width: 292}}\r\n                         type='text'\r\n                         placeholder=\"поиск аптек\"\r\n                         onChange={(e)=>startFilter(e)}\r\n                      />\r\n                   </div>\r\n                    <hr width=\"250\" size=\"5\"/>\r\n                  </div>\r\n                  <div className='scroll'>\r\n                      {props.apteka && props.apteka.map( item => {\r\n                            if (item.isFilter) {\r\n                                return (\r\n                                    <p className='scrollApteka' key={item.idApteka}\r\n                                       onClick={(e) => selectApteka(item)}>{item.apteka}</p>\r\n                                )\r\n                            }\r\n                        }\r\n                    )}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modale","import React from 'react';\r\nimport '../style/loader.css'\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loaderWrapper'>\r\n            <div className=\"loadingio-spinner-bars-kggn2zyokxs\">\r\n                <div className=\"ldio-q7hhewioal\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","export const SHOW_APTEKS = 'SHOW_APTEKS'\r\nexport const CLOSE_APTEKS = 'CLOSE_APTEKS'\r\nexport const FETCH_APTEKS = 'FETCH_APTEKS'\r\nexport const APTEKS_RECEIVED = 'APTEKS_RECEIVED'\r\nexport const ENTER_APTEKA = 'ENTER_APTEKA'\r\nexport const ENTER_COMMENT = 'ENTER_COMMENT'\r\nexport const ENTER_TIME_ON = 'ENTER_TIME_ON'\r\nexport const ENTER_TIME_OFF = 'ENTER_TIME_OFF'\r\nexport const ENTER_TARGET_APTEKA = 'ENTER_TARGET_APTEKA'\r\nexport const SET_FILTER = 'SET_FILTER'\r\nexport const RESET_FILTER = 'RESET_FILTER'\r\nexport const POST_COMMENT = 'POST_COMMENT'\r\nexport const POST_COMMENT_RECEIVED = 'POST_COMMENT_RECEIVED'\r\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED'\r\nexport const SET_MODAL_MESSAGE = 'SET_MODAL_MESSAGE'\r\nexport const FETCH_REPORT = 'FETCH_REPORT'\r\nexport const FETCH_REPORT_RECEIVED = 'FETCH_REPORT_RECEIVED'\r\nexport const REPORT_TIME_START = 'REPORT_TIME_START'\r\nexport const REPORT_TIME_END = 'REPORT_TIME_END'\r\nexport const WRITE_SELECT_TABLE_ROW = 'WRITE_SELECT_TABLE_ROW'\r\nexport const FETCH_CHANGE_REPORT = 'FETCH_CHANGE_REPORT'\r\nexport const FETCH_CHANGE_REPORT_RECEIVED = 'FETCH_CHANGE_REPORT_RECEIVED'\r\nexport const LOCAL_UPDATE_STORE_ROW = 'LOCAL_UPDATE_STORE_ROW'\r\nexport const WRITE_REPORT_FOR_EXEL = 'WRITE_REPORT_FOR_EXEL'\r\nexport const CLEAN_APTEKA = 'CLEAN_APTEKA'\r\n\r\nexport const localUpdateStoreRow = value => ({\r\n    type: LOCAL_UPDATE_STORE_ROW, value\r\n})\r\nexport const enterTimeStart = (value) => ({\r\n    type: REPORT_TIME_START, value\r\n})\r\nexport const enterWhatTimeEnd = (value) => ({\r\n    type: REPORT_TIME_END, value\r\n})\r\nexport const fetchApteks = () => ({\r\n    type: FETCH_APTEKS\r\n})\r\nexport const fetchReport = (value) => ({\r\n    type: FETCH_REPORT,value\r\n})\r\nexport const fetchPutReport = (value) => ({\r\n    type: FETCH_CHANGE_REPORT,value\r\n})\r\nexport const fetchError = (value) => ({\r\n    type: LOG_IN_FAILED,value\r\n})\r\nexport const postComment = (value) => ({\r\n    type: POST_COMMENT,value\r\n})\r\nexport const ShowApteks = () => ({\r\n    type: SHOW_APTEKS\r\n})\r\nexport const CloseApteks = () => ({\r\n    type: CLOSE_APTEKS\r\n})\r\nexport const enterApteks = (value) => ({\r\n    type: ENTER_APTEKA, value\r\n})\r\nexport const enterTextComment = (value) => ({\r\n    type: ENTER_COMMENT, value\r\n})\r\nexport const enterWhatTimeOn = (value) => ({\r\n    type: ENTER_TIME_ON, value\r\n})\r\nexport const enterWhatTimeOff = (value) => ({\r\n    type: ENTER_TIME_OFF, value\r\n})\r\nexport const selectTarget = (value) => ({\r\n    type: ENTER_TARGET_APTEKA, value\r\n})\r\nexport const setFilter = (value) => ({\r\n    type: SET_FILTER, value\r\n})\r\nexport const resetFilter = () => ({\r\n    type: RESET_FILTER\r\n})\r\nexport const setModalMessage = (message) => ({\r\n    type: SET_MODAL_MESSAGE,message\r\n})\r\nexport const writeSelectTableRow = (value) => ({\r\n    type: WRITE_SELECT_TABLE_ROW,value\r\n})\r\nexport const writeReportForExel = (value) => ({\r\n    type: WRITE_REPORT_FOR_EXEL,value\r\n})\r\nexport const cleanApteka = () => ({\r\n    type: CLEAN_APTEKA\r\n})","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, FormControl} from \"react-bootstrap\";\r\n\r\nconst ModalSelectTable = (props) => {\r\n    const [comment, setComment] = useState('')\r\n    const [dt_end, setDt_end] = useState('')\r\n    const [dt_begin, setDt_begin] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (props.selectTableComment?.comment) {\r\n            setComment(props.selectTableComment.comment)\r\n        }\r\n        if (props.selectTableComment?.dt_end) {\r\n            setDt_end(props.selectTableComment.dt_end)\r\n        }\r\n        if (props.selectTableComment?.dt_begin) {\r\n            setDt_begin(props.selectTableComment.dt_begin)\r\n        }\r\n        console.log(comment, dt_end, dt_begin)\r\n    }, [props.active])\r\n    const recordChangesReport = () => {\r\n        // if (dt_begin>dt_end){\r\n        //     props.setModalMessage('Некоректное время')\r\n        //     return null\r\n        // }\r\n        props.fetchPutReport({\r\n            id: props.selectTableComment.id,\r\n            dt_begin: dt_begin || props.selectTableComment.dt_begin,\r\n            dt_end: dt_end || props.selectTableComment.dt_end,\r\n            comment: comment || props.selectTableComment.comment,\r\n            dt_date: props.selectTableComment?.date\r\n        })\r\n        clearInput()\r\n        props.setActive(false)\r\n    }\r\nconst clersEnd = () =>{\r\n    setDt_end('')\r\n    props.selectTableComment.dt_end = ''\r\n}\r\n\r\n    const clearInput = () => {\r\n        setComment('')\r\n        setDt_end('')\r\n        setDt_begin('')\r\n        props.writeSelectTableRow(null)\r\n        props.setActive(false)\r\n    }\r\n    const handlerInputComment = () => {\r\n        setComment(inputComment.current.value)\r\n        setDt_end(inputTimeOn.current.value)\r\n        setDt_begin(inputTimeOff.current.value)\r\n    }\r\n\r\n    const inputTimeOn = useRef()\r\n    const inputComment = useRef()\r\n    const inputTimeOff = useRef()\r\n    return (\r\n        <div className={props.active ? 'services active' : 'services'}\r\n             onMouseDown={clearInput}>\r\n            <div className={props.active ? 'services_content active' : 'services_content'}\r\n                 onMouseDown={e => e.stopPropagation()}>\r\n                <div className='services_text'>\r\n                    <h3 className='text-center'>{props.selectTableComment?.apteka}</h3>\r\n                    <h5 className='text-center'>График: {props.selectTableComment?.grafik}</h5>\r\n                    <hr width=\"250\" size=\"5\"/>\r\n                    <div className='w-100 d-flex align-items-center justify-content-center mb-2 mr-3'>\r\n                        <h5 className='mr-4'>Время выключения :</h5>\r\n                    <FormControl\r\n                        className='inputModalTime'\r\n                        value={dt_begin}\r\n                        onChange={handlerInputComment}\r\n                        type='time'\r\n                        ref={inputTimeOff}\r\n                        placeholder='не указано'\r\n                    />\r\n\r\n                    </div>\r\n                    <div className='w-100 d-flex align-items-center justify-content-center mb-2'>\r\n                        <h5 className='mr-4'>Время включения :</h5>\r\n                        <FormControl\r\n                            className='inputModalTime'\r\n                            value={dt_end}\r\n                            onChange={handlerInputComment}\r\n                            type='time'\r\n                            ref={inputTimeOn}\r\n                            placeholder='не указано'\r\n                        />\r\n                        {/*<Button onClick={clersEnd} variant=\"light\">I</Button>*/}\r\n                    </div>\r\n                    <h5>Коментарий : </h5>\r\n                    <hr width=\"270\" size=\"5\"/>\r\n                    <FormControl\r\n                        className='inputTitleModal'\r\n                        value={comment}\r\n                        onChange={handlerInputComment}\r\n                        ref={inputComment}\r\n                        type='text'\r\n                        as=\"textarea\" rows={1}\r\n                    />\r\n                    <hr width=\"270\" size=\"5\"/>\r\n                    <Button\r\n                        className=\"buttonTable\" variant=\"success\"\r\n                            onClick={recordChangesReport}\r\n                    >Сохранить изменения</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ModalSelectTable;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport '../style/table.css'\r\nimport {fetchPutReport, fetchReport, setModalMessage, writeSelectTableRow} from \"../redux/action\";\r\nimport ModalSelectTable from \"./modalSelectTable\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n   tableReport: state.comment.tableReport,\r\n   selectTableComment: state.comment.selectTableComment,\r\n   modalMessage: state.comment.modalMessage,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n   writeSelectTableRow, fetchPutReport,fetchReport,setModalMessage\r\n})\r\n\r\nconst $BordTable = (props) => {\r\n\r\n   const [active, setActive] = useState(false)\r\n\r\n   const selectComment = (post) => {\r\n      console.log(post)\r\n      props.writeSelectTableRow(post)\r\n      setActive(true)\r\n   }\r\n   return (\r\n      <div>\r\n         <ModalSelectTable\r\n            active={active}\r\n            setActive={setActive}\r\n            selectTableComment={props.selectTableComment}\r\n            fetchPutReport={props.fetchPutReport}\r\n            fetchReport={props.fetchReport}\r\n            writeSelectTableRow={props.writeSelectTableRow}\r\n            modalMessage={props.modalMessage}\r\n            setModalMessage={props.setModalMessage}\r\n         />\r\n      <table   className='table ml-3 w-65'>\r\n         <thead>\r\n         <tr>\r\n            <th>Дата</th>\r\n            <th>Аптека</th>\r\n            <th>График</th>\r\n            <th>Выключили</th>\r\n            <th>Включили</th>\r\n            <th>Коментарий</th>\r\n         </tr>\r\n         </thead>\r\n         <tbody>\r\n         {props.tableReport && props.tableReport.map(post => {\r\n               return (\r\n                  <tr key={post.id} onDoubleClick={(e) => selectComment(post)}>\r\n                     <td style={{width: 110}}>{post.dt_date}</td>\r\n                     <td className='tableTd'>{post.apteka}</td>\r\n                     <td style={{width: 110}}>{post.grafik}</td>\r\n                     <td style={{width: 100}}>{post.dt_begin}</td>\r\n                     <td style={{width: 100}}>{post.dt_end}</td>\r\n                     <td style={{width: 200}}>{post.comment}</td>\r\n                  </tr>\r\n               )\r\n            }\r\n         )}\r\n         </tbody>\r\n      </table>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst BordTable = connect(mapStateToProps, mapDispatchToProps)($BordTable)\r\n\r\nexport default BordTable;","import React from 'react'\r\nimport ReactExport from \"react-export-excel\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst data = [\r\n    {\r\n        Date: 'asdkasd',\r\n        Apteka: 'aosdkasdkko',\r\n        Grafik: 'asdkasd',\r\n        TimeOff: 'aosdkasdkko',\r\n        TimeOn: 'asdkasd',\r\n        Comment: 'aosdkasdkko'\r\n    },\r\n    {\r\n        Date: 'assfdsdkasd',\r\n        Apteka: 'aosdkadsfsdkko',\r\n        Grafik: 'asdk3434asd',\r\n        TimeOff: 'aosdk435asdkko',\r\n        TimeOn: 'asdkjhjasd',\r\n        Comment: 'aosdksfasdkko'\r\n    },\r\n    {\r\n        Date: 'asdksdfdsasd',\r\n        Apteka: 'aosdkassdfsdfdkko',\r\n        Grafik: 'asdk345asd',\r\n        TimeOff: 'aosdkasdk453ko',\r\n        TimeOn: 'asdkgfdasd',\r\n        Comment: 'aosdkahfghgfhsdkko'\r\n    },\r\n    {\r\n        Date: 'asdksdfasd',\r\n        Apteka: 'aosdkasdfssdkko',\r\n        Grafik: 'asdk34534asd',\r\n        TimeOff: 'aosdka3454sdkko',\r\n        TimeOn: 'asdka534sd',\r\n        Comment: 'aossdfsfdkasdfdskko'\r\n    },\r\n]\r\n\r\nconst Excel = (props) => {\r\n    return (\r\n        <ExcelFile element={<Button\r\n            variant=\"info\"\r\n        >Выгрузить в Excel\r\n        </Button>}\r\n                   filename=\"Отчет. Выключение света на ТТ\">\r\n            <ExcelSheet data={props.tableReport} name=\"Employees\">\r\n                <ExcelColumn label=\"Дата\" value=\"dt_date\"/>\r\n                <ExcelColumn label=\"Аптека\" value=\"apteka\"/>\r\n                <ExcelColumn label=\"График\" value=\"grafik\"/>\r\n                <ExcelColumn label=\"Выключили\" value=\"dt_begin\"/>\r\n                <ExcelColumn label=\"Включили\" value=\"dt_end\"/>\r\n                <ExcelColumn label=\"Коментарий\" value=\"comment\"/>\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    )\r\n}\r\nexport default Excel","import React from 'react';\r\nimport {Button, FormControl, Navbar} from \"react-bootstrap\";\r\nimport {enterTimeStart, enterWhatTimeEnd, fetchReport, writeReportForExel} from \"../redux/action\";\r\nimport {connect} from \"react-redux\";\r\nimport Excel from \"./reportExel\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reportTimeStart: state.comment.reportTimeStart,\r\n    reportTimeEnd: state.comment.reportTimeEnd,\r\n    reportForExel: state.comment.reportForExel,\r\n    tableReport: state.comment.tableReport,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    enterTimeStart,\r\n    enterWhatTimeEnd,\r\n    fetchReport,\r\n    writeReportForExel\r\n})\r\n\r\nconst $TitleNavbar = (props) => {\r\n    const handlerTimeStart = (e) => {\r\n        props.enterTimeStart(e.target.value);\r\n    }\r\n    const handlerTimeEnd = (e) => {\r\n        props.enterWhatTimeEnd(e.target.value)\r\n    }\r\n\r\n    const handlerReport = () => {\r\n        props.fetchReport({\r\n            dateStart: props.reportTimeStart,\r\n            dateEnd: props.reportTimeEnd,\r\n        })\r\n    }\r\n    const obj = {\r\n        columns: ['Дата', 'Аптека', 'График', 'Выключили', 'Включили', 'Коментарий'],\r\n        data: [\r\n            [1, 2],\r\n            [1, 3],\r\n            [1, 4],\r\n            [1, 5],\r\n            [1, 6],\r\n            [1, 7],\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"wraperNavbar\">\r\n            <div className='w-50 wraperNavbar'>\r\n                <FormControl onChange={(e) => handlerTimeStart(e)}\r\n                             className='inputTitleTime' type='date'/>\r\n                <FormControl onChange={(e) => handlerTimeEnd(e)}\r\n                             className='inputTitleTime' type='date'/>\r\n                <Button variant=\"success\"\r\n                        onClick={(e) => handlerReport(e)}\r\n                >Отчет</Button>\r\n                <div className='ml-5'>\r\n                    <Excel dataSet={obj.data}\r\n                           writeReportForExel={props.writeReportForExel}\r\n                           tableReport={props.tableReport}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='wraperNavbarText w-50'>\r\n                <h4>Дашборд для Насти</h4>\r\n            </div>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst TitleNavbar = connect(mapStateToProps, mapDispatchToProps)($TitleNavbar)\r\n\r\nexport default TitleNavbar;","import {Button, FormControl, Modal} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport Modale from \"./modal\";\r\nimport Loader from \"./loader\";\r\nimport BordTable from \"./bordTable\";\r\nimport {\r\n\r\n    enterApteks,\r\n    enterTextComment,\r\n    enterWhatTimeOff,\r\n    enterWhatTimeOn,\r\n    fetchApteks,\r\n    CloseApteks,\r\n    ShowApteks,\r\n    selectTarget,\r\n    setFilter,\r\n    postComment,\r\n    setModalMessage, cleanApteka\r\n} from \"../redux/action\";\r\nimport TitleNavbar from \"./titleNavbar\";\r\nimport {useRef} from \"react\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    aptekaFiltered: state.comment.aptekaFiltered,\r\n    showApteka: state.comment.showApteka,\r\n    textApteka: state.comment.textApteka,\r\n    textComment: state.comment.textComment,\r\n    enterTimeOn: state.comment.enterTimeOn,\r\n    enterTimeOff: state.comment.enterTimeOff,\r\n    isLoader: state.comment.isLoader,\r\n    error: state.comment.error,\r\n    postCommentDate: state.comment.postCommentDate,\r\n    modalMessage: state.comment.modalMessage,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    fetchApteks,\r\n    CloseApteks,\r\n    ShowApteks,\r\n    enterApteks,\r\n    enterTextComment,\r\n    enterWhatTimeOn,\r\n    enterWhatTimeOff,\r\n    selectTarget,\r\n    setFilter,\r\n    postComment,\r\n    setModalMessage,\r\n    cleanApteka\r\n})\r\n\r\n\r\nconst $Comment = (props) => {\r\n\r\n    const commentHandler = (e) => {\r\n        props.enterTextComment(e.target.value)\r\n    }\r\n    const commentTimeOnHandler = (e) => {\r\n        props.enterWhatTimeOn(e.target.value)\r\n    }\r\n    const commentTimeOffHandler = (e) => {\r\n        props.enterWhatTimeOff(e.target.value)\r\n    }\r\n\r\n    const wrightEntered = () => {\r\n        console.log(enterTimeOff.current.value);\r\n        console.log(enterTimeOn.current.value.length);\r\n        console.log(textComment.current.value.length);\r\n        if (!props.textApteka.idApteka) {\r\n            props.setModalMessage('Выберите аптеку')\r\n            return null\r\n        }\r\n        if (!enterTimeOff) {\r\n            props.setModalMessage('Некоректное время')\r\n            return null\r\n        }\r\n        if (enterTimeOn < enterTimeOff) {\r\n            props.setModalMessage('Некоректный интервал времени')\r\n            return null\r\n        }\r\n        props.postComment({\r\n            whatApteka: props.textApteka.idApteka,\r\n            timeOff: enterTimeOff.current.value, /** должна быть (левая)*/\r\n            timeOn: enterTimeOn.current.value, /** должна быть (правая)*/\r\n            whatComment: textComment.current.value\r\n        })\r\n        props.cleanApteka()\r\n        enterTimeOff.current.value = null\r\n        enterTimeOn.current.value = null\r\n        textComment.current.value = null\r\n    }\r\n\r\n    const enterTimeOff = useRef(null)\r\n    const enterTimeOn = useRef(null)\r\n    const textComment = useRef(null)\r\n\r\n    return (\r\n        <div className=\"mainWrapper d-flex flex-column align-items-center\">\r\n            {props.isLoader === true ? <Loader/> : null}\r\n            <TitleNavbar/>\r\n            <div className=\"d-flex flex-row w-100\">\r\n                <BordTable/>\r\n                <div className=\"d-flex flex-column align-items-center w-50\">\r\n                    <Modal\r\n                        size=\"sm\"\r\n                        show={!!props.modalMessage}\r\n                        onHide={() => props.setModalMessage('')}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\">\r\n                        <Modal.Body>{props.modalMessage}</Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"m-3\">\r\n                        <Button\r\n                            onClick={props.ShowApteks}\r\n                            variant=\"secondary\"\r\n                        >Выберите аптеку</Button>\r\n                        <Modale\r\n                            apteka={props.aptekaFiltered}\r\n                            active={props.showApteka}\r\n                            setActive={props.CloseApteks}\r\n                            selectTargApteka={props.selectTarget}\r\n                            setFilter={props.setFilter}\r\n                        />\r\n                    </div>\r\n                    {!props.textApteka.apteka ? <h6>аптека не выбрана</h6> :\r\n                        <div className='d-flex flex-column align-items-center'>\r\n                            <h3>{props.textApteka.apteka}</h3>\r\n                                {props.textApteka.days1===\"00:00\" ?\r\n                                    <h5>Круглосуточная</h5> :\r\n                                <div className='d-flex justify-content-center'>\r\n                                    <h5>{props.textApteka.days1} - </h5>\r\n                                    <h5 className='pl-1'>{props.textApteka.days2}</h5>\r\n                                </div>}\r\n                        </div>\r\n                    }\r\n                    <div>\r\n                        <div className=\"d-flex flex-row align-items-center\">\r\n                            <FormControl\r\n                                ref={enterTimeOff}\r\n                                style={{width: 191}}\r\n                                className=\"m-2\"\r\n                                placeholder=\"Выключили свет\"\r\n                                type='time'\r\n                                // onChange={(e) => commentTimeOffHandler(e)}\r\n                            />\r\n                            <FormControl\r\n                                ref={enterTimeOn}\r\n                                style={{width: 192}}\r\n                                type='time'\r\n                                className=\"m-2\"\r\n                                placeholder=\"Включили свет\"\r\n                                // onChange={(e) => commentTimeOnHandler(e)}\r\n                            />\r\n                        </div>\r\n                        <FormControl\r\n                            ref={textComment}\r\n                            as=\"textarea\" rows={2}\r\n                            style={{width: 400}}\r\n                            className=\"m-2\"\r\n                            placeholder=\"оставьте ваш коментарий\"\r\n                            // onChange={(e) => commentHandler(e)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        className=\"m-3\"\r\n                        variant=\"success\"\r\n                        onClick={(e) => wrightEntered(e)}\r\n                    >Сохранить коментарий</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Comment = connect(mapStateToProps, mapDispatchToProps)($Comment)\r\n\r\nexport default Comment;","import React, {useEffect, useState} from \"react\"\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport Comment from \"./component/comment\"\r\nimport {\r\n    fetchApteks, fetchReport,\r\n} from \"./redux/action\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Loader from \"./component/loader\";\r\n\r\n\r\nconst App = () => {\r\n    const [isAuth, setAuth] = useState(false)\r\n\r\n    const authCheck = async () => {\r\n        let userToken = localStorage.getItem('currentUserToken');\r\n        let userID = localStorage.getItem('currentUserID')?.replace(/\"/gi, '');\r\n        if (userToken && userID) {\r\n            let checkCredentials = await fetch(`${process.env.REACT_APP_USER_API}/usersAuthCheck:${userID}:${userToken}`)\r\n                .then(res => res.json())\r\n            let checkRights = await fetch(`${process.env.REACT_APP_USER_API}/hasRights:${userID}:${process.env.REACT_APP_ID}`)\r\n                .then(res => res.json())\r\n            if (!checkCredentials || !checkRights) {\r\n                window.location.href = \"https://tmc.lll.org.ua/\"\r\n            } else {\r\n                setAuth(true)\r\n            }\r\n        } else {\r\n            window.location.href = \"https://tmc.lll.org.ua/\"\r\n        }\r\n    }\r\n    let nowDate = new Date().toISOString().substr(0, 10)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        authCheck()\r\n            .then(null)\r\n        dispatch(fetchApteks())\r\n        dispatch(fetchReport({\r\n            dateStart: nowDate,\r\n            dateEnd: nowDate,\r\n        }))\r\n    }, [])// eslint-disable-line\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <BrowserRouter>\r\n                <Comment/>\r\n            </BrowserRouter>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Loader />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default App;","import {combineReducers} from \"redux\";\r\nimport {commentReducer} from \"./commentReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    comment: commentReducer\r\n})","import {\r\n    FETCH_APTEKS,\r\n    APTEKS_RECEIVED,\r\n    POST_COMMENT,\r\n    POST_COMMENT_RECEIVED,\r\n    LOG_IN_FAILED,\r\n    FETCH_REPORT,\r\n    FETCH_REPORT_RECEIVED, FETCH_CHANGE_REPORT, FETCH_CHANGE_REPORT_RECEIVED, localUpdateStoreRow\r\n} from \"../redux/action\";\r\n\r\nimport {put, takeLatest, all} from 'redux-saga/effects';\r\n\r\n/**saga getApteka */\r\nfunction* fetchApteks() {\r\n    let data = yield fetch(process.env.REACT_APP_SAGA_FETCH_APTECS)\r\n        .then(response => response.json());\r\n    let newList = []\r\n\r\n    data[0].map(item => {\r\n        let parsed = {}\r\n        parsed.idApteka = item.ID_APTEKA\r\n        parsed.apteka = item.APTEKA\r\n        parsed.days1 = item.days1\r\n        parsed.days2 = item.days2\r\n        parsed.isFilter = true\r\n        newList.push(parsed)\r\n        return null\r\n    })\r\n    console.log('data', data)\r\n    console.log('apteky', newList)\r\n    yield put({type: APTEKS_RECEIVED, data: newList});\r\n}\r\n\r\nfunction* fetchApteksWatcher() {\r\n    yield takeLatest(FETCH_APTEKS, fetchApteks)\r\n}\r\n\r\n\r\n/** saga postComment */\r\nfunction* postComment(action) {\r\n    let options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(action.value)\r\n    }\r\n    console.log('saga', action.value)\r\n    let nowDate = new Date().toISOString().substr(0, 10)\r\n    let newDate = {\r\n        dateStart: nowDate,\r\n        dateEnd: nowDate\r\n    }\r\n    try {\r\n        const data = yield fetch(process.env.REACT_APP_SAGA_INPUT_COMMENT, options)\r\n            .then(response => response.json());\r\n        console.log('saga-data', data)\r\n        yield put({type: POST_COMMENT_RECEIVED, data: data});\r\n        yield put({type: FETCH_REPORT, value: newDate});\r\n    } catch (error) {\r\n        yield put({type: LOG_IN_FAILED, data: error.toString()});\r\n    }\r\n}\r\n\r\nfunction* postCommentWatcher() {\r\n    yield takeLatest(POST_COMMENT, postComment)\r\n}\r\n\r\n/**saga getReport */\r\nfunction* fetchReport(action) {\r\n    let options = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(action.value)\r\n    }\r\n    console.log('saga', action.value)\r\n    try {\r\n        let data = yield fetch(process.env.REACT_APP_SAGA_FETCH_REPORT, options)\r\n            .then(response => response.json());\r\n        const format = (dateString) => {\r\n            let time = dateString.split('T')[1].substring(0, 5)\r\n            let arrDate = dateString.split('T')[0].split('-')\r\n            let date = `${arrDate[2]}.${arrDate[1]}.${arrDate[0]}`\r\n            return {date, time}\r\n        }\r\n        const formatGrafik = (dateString) => {\r\n            if (!dateString) {\r\n                return '-'\r\n            }\r\n            let day1 = dateString.split('-')[0].substring(0, 5)\r\n            let day2 = dateString.split('-')[1].substring(1, 6)\r\n            if (day1 === '00:00') {\r\n                return \"круглосуточная\"\r\n            }\r\n            return `${day1}-${day2}`\r\n        }\r\n        let newList = []\r\n        data.map(item => {\r\n            let parsed = {}\r\n            parsed.apteka = item.apteka\r\n            parsed.dt_date = format(item.dt_date).date\r\n            parsed.date = item.dt_date.substring(0, 10)\r\n            parsed.grafik = formatGrafik(item.grafik)\r\n            parsed.dt_end = !item.dt_end ? item.dt_end : format(item.dt_end).time\r\n            parsed.dt_begin = format(item.dt_begin).time\r\n            parsed.comment = item.comment ? item.comment : null\r\n            parsed.id = item.id\r\n            newList.push(parsed)\r\n        })\r\n        console.log('тянем поствы',data)\r\n        yield put({type: FETCH_REPORT_RECEIVED, data: newList});\r\n    } catch (error) {\r\n        yield put({type: LOG_IN_FAILED, data: error.toString()});\r\n    }\r\n}\r\n\r\nfunction* fetchReportWatcher() {\r\n    yield takeLatest(FETCH_REPORT, fetchReport)\r\n}\r\n\r\n/**saga changeReport */\r\nfunction* fetchPutReport(action) {\r\n    let options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(action.value)\r\n    }\r\n    console.log('saga_cheng', action.value)\r\n    try {\r\n        let data = yield fetch(process.env.REACT_APP_SAGA_PUT_REPORT, options)\r\n            .then(response => response.json());\r\n        console.log('saga_cheng-data', data)\r\n\r\n        yield put({type: FETCH_CHANGE_REPORT_RECEIVED, data: data});\r\n        yield put(localUpdateStoreRow(Object.assign(action.value, {isChange: data})))\r\n    } catch (error) {\r\n        yield put({type: LOG_IN_FAILED, data: error.toString()});\r\n    }\r\n}\r\n\r\nfunction* fetchPutReportWatcher() {\r\n    yield takeLatest(FETCH_CHANGE_REPORT, fetchPutReport)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fetchApteksWatcher(), postCommentWatcher(), fetchReportWatcher(), fetchPutReportWatcher()\r\n    ])\r\n}\r\n  ","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\nimport {compose, createStore, applyMiddleware} from \"redux\"\r\nimport {Provider} from \"react-redux\";\r\nimport thunk from \"redux-thunk\"\r\nimport saga from \"redux-saga\"\r\nimport {rootReducer} from \"./redux/rootReducer\";\r\nimport rootSaga from '../src/saga/saga'\r\n\r\nconst sagaMiddleware = saga()\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(thunk,sagaMiddleware),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\nsagaMiddleware.run(rootSaga)\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\nrender(app, document.getElementById('root')\r\n);"],"sourceRoot":""}